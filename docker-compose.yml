version: '3.7'

services:
  # ZOOKEEPER
  zookeeper:
    image: 'confluentinc/cp-zookeeper:7.0.1'
    hostname: zookeeper
    container_name: zookeeper
    restart: on-failure
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  # KAFKA
  kafka:
    image: 'confluentinc/cp-kafka:7.0.1'
    hostname: kafka
    container_name: kafka
    restart: on-failure
    ports:
      - '29092:29092'
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - zookeeper

  init-kafka:
    image: 'confluentinc/cp-kafka:7.0.1'
    container_name: init-kafka
    entrypoint:
      - /bin/sh
      - '-c'
    command: >
      " kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists
      --topic Tickets --replication-factor 1 --partitions 1"
    restart: on-failure
    depends_on:
      - kafka

  kafka_topics_ui:
    image: 'provectuslabs/kafka-ui:latest'
    container_name: kafka_topics_ui
    hostname: kafka-ui
    ports:
      - '8080:8080'
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'kafka:29092'
    restart: on-failure
    depends_on:
      - kafka
 
  # POSTGRES
  postgres:
    image: postgres
    container_name: postgresql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: P@55w0rd
    command: >-
        postgres -c wal_level=logical
    restart: on-failure
    ports:
      - '5432:5432'

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    environment:
      PGADMIN_DEFAULT_EMAIL: '${PGADMIN_DEFAULT_EMAIL:-pgadmintest@pgadmin.org}'
      PGADMIN_DEFAULT_PASSWORD: '${PGADMIN_DEFAULT_PASSWORD:-@dm1n}'
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - 'pgadmin:/var/lib/pgadmin'
    ports:
      - '${PGADMIN_PORT:-5050}:80'
    depends_on:
      - postgres

  # CONNECT
  connect:
    image: debezium/connect:1.4
    container_name: connect
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
    ports:
      - 8083:8083
    depends_on: [kafka]

  eventproducer:
    build: 
      context: .
      dockerfile: ./src/Outbox_101.EventProducer/Dockerfile
    image: eventproducer:latest
    container_name: EventProducer
    depends_on:
      - postgres

  eventconsumer:
    build: 
      context: .
      dockerfile: ./src/Outbox_101.EventConsumer/Dockerfile
    image: eventconsumer:latest
    container_name: EventConsumer
    depends_on:
      - kafka
      - postgres

volumes:
  pgadmin: